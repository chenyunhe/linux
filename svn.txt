安装配置svn服务器

下载相关软件
wget http://subversion.tigris.org/downloads/subversion-1.6.6.tar.gz
wget http://subversion.tigris.org/downloads/subversion-deps-1.6.6.tar.gz
编辑
1、查看是否安装了svn工具
命令：rpm -qa | grep subversion
如果服务器已经安装了则不需要进行安装，如果没有安装可以进行全新的安装
2、首先检测系统有没有安装SSL：
find / -name opensslv.h
如果找不到，就执行如下命令进行安装：
yum install openssl
yum install openssl-devel
安装之后用find / -name opensslv.h命令找到opensslv.h所在的目录，即下列–with-openssl=后面的路径，
3、解压svn安装文件
subversion-1.6.6.tar.gz
subversion-deps-1.6.6.tar.gz
命令如下：

tar zxvf subversion-1.6.6.tar.gz
tar zxvf subversion-deps-1.6.6.tar.gz
tar 为解压命令，zxvf为tar命令的参数，用于解压tar.gz格式压缩的文件。
解压后生成 subversion-1.6.6 子目录，两个压缩包解压后都会自动放到此目录下，不用手动更改。
进入解压子目录 cd subversion-1.6.6 进行编译。
4、编译：

./configure --prefix=/usr/local/svn --with-openssl=/usr/include/openssl
--without-berkeley-db
后面以svnserve方式运行，所以不加apache编译参数。以fsfs格式存储版本库，不编译berkeley-db
如果编译时报如下错误：
no acceptable C compiler found in $PATH
说明没有gcc库，使用如下命令安装gcc后再编译：
yum -y install gcc
如果最后出现下面WARNING,我们直接忽略即可，因为不使用BDB存储。

configure: WARNING: we have configured without BDB filesystem support
You don't seem to have Berkeley DB version 4.0.14or newer
installed and linked to APR-UTIL. We have created Makefiles which
will build without the Berkeley DB back-end; your repositories will
use FSFS as the defaultback-end. You can find the latest version of
Berkeley DB here:
http://www.sleepycat.com/download/index.shtml
安装
make
make install
如果 make install 出现下面错误：
/home/upload/subversion-1.6.6/subversion/svnversion/.libs/lt-svnversion: error while loading shared libraries: libiconv.so.2: cannot open shared object file: No such file or directory
make: *** [revision-install] Error 127
解决办法：
1、编辑/etc/ld.so.conf文件
vi /etc/ld.so.conf
添加下面一行代码
/usr/local/lib
2、保存后运行ldconfig：
/sbin/ldconfig
注：ld.so.conf和ldconfig用于维护系统动态链接库。
3、然后再安装
make && make install
测试是否安装成功
1
/usr/local/svn/bin/svnserve --version
如果显示如下，svn安装成功:

svnserve, version 1.6.6(r40053)
compiled Dec 252012, 13:14:38
Copyright (C) 2000-2009CollabNet.
Subversion is open source software, see http://subversion.tigris.org/
This product includes software developed by CollabNet
(http://www.Collab.Net/).
The following repository back-end (FS) modules are available:
* fs_fs : Module forworking with a plain file (FSFS) repository.
Cyrus SASL authentication is available.
4、为了方便下操作，把svn相关的命令添加到环境变量中:
echo “export PATH=$PATH:/usr/local/svn/bin/” >> /etc/profile
source /etc/profile
配置svn
1、建立SVN的根目录
mkdir -p /opt/svn/
2、建立一个产品仓库
mkdir -p /opt/svn/tshop/
svnadmin create /opt/svn/tshop/
如果你们的研发中心有多个产品组，每个产品组可以建立一个SVN仓库
3、修改版本配置库文件
vi /opt/svn/tshop/conf/svnserve.conf
修改后的文件内容如下：


### This file controls the configuration of the svnserve daemon, ifyou
### use it to allow access to thisrepository.  (If you only allow
### access through http: and/or file: URLs, then thisfile is
### irrelevant.)
### Visit http://subversion.tigris.org/ for more information.
[general]
### These options control access to the repository forunauthenticated
### and authenticated users.  Valid values are "write", "read",
### and "none".  The sample settings below are the defaults.
anon-access = none # 注意这里必须设置，否则所有用户不用密码就可以访问
auth-access = write
### The password-db option controls the location of the password
### database file.  Unless you specify a path starting with a /,
### the file's location is relative to the directory containing
### thisconfiguration file.
### If SASL is enabled (see below), thisfile will NOT be used.
### Uncomment the line below to use the defaultpassword file.
password-db = passwd
### The authz-db option controls the location of the authorization
### rules forpath-based access control.  Unless you specify a path
### starting with a /, the file's location is relative to the the
### directory containing thisfile.  If you don't specify an
### authz-db, no path-based access control is done.
### Uncomment the line below to use the defaultauthorization file.
authz-db = authz
### This option specifies the authentication realm of the repository.
### If two repositories have the same authentication realm, they should
### have the same password database, and vice versa.  The defaultrealm
### is repository's uuid.
realm = tshop
[sasl]
### This option specifies whether you want to use the Cyrus SASL
### library forauthentication. Default is false.
### This section will be ignored ifsvnserve is not built with Cyrus
### SASL support; to check, run 'svnserve --version'and look fora line
### reading 'Cyrus SASL authentication is available.'
# use-sasl = true
### These options specify the desired strength of the security layer
### that you want SASL to provide. 0means no encryption, 1means
### integrity-checking only, values larger than 1are correlated
### to the effective key length forencryption (e.g. 128means 128-bit
### encryption). The values below are the defaults.
# min-encryption = 0
# max-encryption = 256
对用户配置文件的修改是立即生效的，不必重启svn。
4、开始设置passwd用户账号信息

vi /data/svn/repos/conf/passwd
修改完之后的内容如下：
### This file is an example password file forsvnserve.
### Its format is similar to that of svnserve.conf. As shown in the
### example below it contains one section labelled [users].
### The name and password foreach user follow, one account per line.
### 在下面添加用户和密码，每行一组username = password
[users]
# harry = harryssecret
# sally = sallyssecret
###===========下面是我添加的用户信息========#######
iitshare = password1
itblood = password2
5、开始设置authz. 用户访问权限
vi /data/svn/repos/conf/authz
修改完之后的内容如下：

### This file is an example authorization file forsvnserve.
### Its format is identical to that of mod_authz_svn authorization
### files.
### As shown below each section defines authorizations forthe path and
### (optional) repository specified by the section name.
### The authorizations follow. An authorization line can refer to:
###  - a single user,
###  - a group of users defined in a special [groups] section,
###  - an alias defined in a special [aliases] section,
###  - all authenticated users, using the '$authenticated'token,
###  - only anonymous users, using the '$anonymous'token,
###  - anyone, using the '*'wildcard.
###
### A match can be inverted by prefixing the rule with '~'. Rules can
### grant read ('r') access, read-write ('rw') access, or no access
### ('').
[aliases]
# joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil,
Ltd./OU=Research Institute/CN=Joe Average
# [groups]
# harry_and_sally = harry,sally
# harry_sally_and_joe = harry,sally,&joe
# [/foo/bar]
# harry = rw
# &joe = r
# * =
# [repository:/baz/fuz]
# @harry_and_sally= rw
# * = r
###--------------------下面我新加的------------------------###
###屏蔽掉上面的[groups] 因为在下面添加了
[groups]
devteam = iitshare, itblood #devteam 项目组包括两个用户iitshare,itblood
[/]
iitshare = rw
itblood =
    [tshop:/tb2c]
@devteam= rw
itblood =
    [tshop:/tb2b2c]
@devteam= rw
itblood = r
其中，1个用户组可以包含1个或多个用户，用户间以逗号分隔。
说明：

devteam = iitshare, itblood #devteam 项目组包括两个用户iitshare,itblood
[/]
iitshare = rw #iitshare 对根目录有读写权限
itblood = #itblood 对根目录没有任何权限
####如果需要配置tb2c、tb2b2c项目的权限，前提条件是tshop仓库下面需要有这两个项目
####如果没有的话，tshop都将不能访问
    [tshop:/tb2c] #对tshop仓库的tb2c项目进行权限控制
@devteam= rw #控制 devteam 组对tb2c项目有读写权限
itblood = #限制 itblood 所有权限，其它用户有读写权限
    [tshop:/tb2b2c] #对 tshop: 仓库的 tb2b2c 项目进行权限控制
@devteam= rw #限制 devteam 组对tb2b2c项目有读写权限
itblood = r #限制 itblood 只有读权限，其它用户有读写权限
6、注意：
* 权限配置文件中出现的用户名必须已在用户配置文件中定义。
* 对权限配置文件的修改立即生效，不必重启svn。
用户组格式：

[groups]
    = ,
其中，1个用户组可以包含1个或多个用户，用户间以逗号分隔。
版本库目录格式：
[<版本库>:/项目/目录]
@<用户组名> = <权限>
<用户名> = <权限>
其中，方框号内部分可以有多种写法:
[/],表示根目录及以下，根目录是svnserve启动时指定的，我们指定为/home/svndata，[/]就是表示对全部版本库设置权限。
[tshop:/] 表示对版本库tshop设置权限；
[tshop:/abc] 表示对版本库tshop中的abc项目设置权限；
[tshop:/abc/aaa] 表示对版本库tshop中的abc项目的aaa目录设置权限；
权限主体可以是用户组、用户或*，用户组在前面加@，*表示全部用户。
权限可以是w、r、wr和空，空表示没有任何权限。
7、建立启动svn的用户
useradd svn
根据提示,为用户svn设置密码
允许用户svn访问版本库:
chown -R svn:svn /opt/svn
8、启动svn：
方式一：svnserve -d -r /opt/svn/ #默认的启动端口号为3690
方式二：su – svn -c “svnserve -d –listen-port 9999 -r /opt/svn/”
其中：
su – svn表示以用户svn的身份启动svn；
-d表示以daemon方式（后台运行）运行；
–listen-port 9999表示使用9999端口，可以换成你需要的端口。但注意，使用1024以下的端口需要root权限；
-r /opt/svn 指定根目录是/opt/svn。
9、检查是否启动
netstat -tunlp | grep svn
如果显示以下信息说明启动成功
tcp 0 0 0.0.0.0:9999 0.0.0.0:* LISTEN 10973/svnserve
10、将svn加入到开机启动
编辑rc.local文件：vi /etc/rc.d/rc.local
加入如下启动命令：
/usr/local/svn/bin/svnserve -d –listen-port 9999 -r /opt/svn
11、如果想停止svn，则使用如下命令：
killall svnserve
12、如果想将svn作为服务：
在/etc/rc.d/init.d/目录下新建名为svn的文件
并设置权限为755：chmod 755 /etc/rc.d/init.d/svn
编辑svn文件：vi /etc/rc.d/init.d/svn, 在里面添加如下代码：

#!/bin/bash
# build thisfile in /etc/rc.d/init.d/svn
# chmod 755/etc/rc.d/init.d/svn
# centos下可以用如下命令管理svn: service svn start(restart/stop)
SVN_HOME=/opt/svn
if[ ! -f "/usr/local/svn/bin/svnserve"]
then
echo "svnserver startup: cannot start"
exit
fi
case"$1"in
start)
echo "Starting svnserve..."
    /usr/local/svn/bin/svnserve -d --listen-port 9999-r $SVN_HOME
echo "Finished!"
;;
stop)
echo "Stoping svnserve..."
killall svnserve
echo "Finished!"
;;
restart)
$0stop
$0start
;;
*)
echo "Usage: svn { start | stop | restart } "
exit 1
esac
之后便可以以service svn start(restart/stop)方式启动SVN。
通过web方式访问svn有很多方法，请参阅配置websvn或配置bsSvnBrowser的方法
客户端访问
1、下载安装文件
window 64位的话下载：TortoiseSVN-1.7.6.22632-x64-svn-1.7.4.msi
window 32位的话下载：TortoiseSVN-1.6.5.16974-win32-svn-1.6.5.msi
具体的下载文件可以在网上下载下，一找一大堆
2、通过客户端进行访问
地址如下：
svn://{your-server-ip}:9999/tshop/ 或者 svn://{your-server-ip}:3690/tshop/
注意：
不要在浏览器中通过http的方式进行访问，如下地址：
http://{your-server-ip}:9999/tshop/ 或者 http://{your-server-ip}:3690/tshop/
那样肯定是不行的，因为你没有配置http的服务，上面是安装独立的SVN服务器
